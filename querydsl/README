# Querydsl

### 기본 설정

프로젝트 생성 및 초기 설정

1. [start.spring.io](https://start.spring.io/) 에서 통해 프로젝트 생성
2. 의존성 추가
   * Spring Web
   * Spring Data JPA
   * H2 Database
   * Lombok
3. querydsl 설정
   * build.gradle 설정
      ```groovy
      plugins {
         id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
      }
      
      dependencies {
         implementation 'com.querydsl:querydsl-jpa'
      }
      
      //querydsl 추가 시작
      def querydslDir = "$buildDir/generated/querydsl"
      querydsl {
         jpa = true
         querydslSourcesDir = querydslDir
      }
      sourceSets {
         main.java.srcDir querydslDir
      }
      configurations {
         querydsl.extendsFrom compileClasspath
      }
      compileQuerydsl {
         options.annotationProcessorPath = configurations.querydsl
      }
      //querydsl 추가 끝
      ```
      * [querydsl 플러그인 버전](https://plugins.gradle.org/plugin/com.ewerk.gradle.plugins.querydsl)
4. QClass 생성 확인
   * `Gradle - other - compileQuerydsl`
5. spring-boot 설정
   * application.yml 설정
      ```yaml
      spring:
        datasource:
          url: jdbc:h2:tcp://localhost/~/querydsl
          username: sa
          password:
          driver-class-name: org.h2.Driver
        jpa:
          hibernate:
            ddl-auto: create
          properties:
            hibernate:
              # show_sql: true
              format_sql: true
     
      logging.level:
        org.hibernate.SQL: debug
        # org.hibernate.type: trace
      ```
   * query parameter 라이브러리 추가(`application.yml`)
      ```groovy
      dependencies {
        implementation("com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1")
      }
      ```
      * [p6spy 버전 확인](https://github.com/gavlyukovskiy/spring-boot-data-source-decorator)